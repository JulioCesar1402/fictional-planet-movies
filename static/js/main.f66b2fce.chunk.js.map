{"version":3,"sources":["Context/PlanetsContext.jsx","Context/Provider.jsx","components/subcomponent/CategoriesFilter.jsx","components/SearchBar.jsx","components/Table.jsx","App.js","index.js"],"names":["PlanetsContext","createContext","Provider","children","useState","data","getData","onChangeInputs","getOnChangeInputs","newData","getNewData","name","getName","button","getButton","column","getColumn","comparison","getComparison","value","getValue","filterByNumericValues","getFilterByNumericValues","useEffect","a","fetch","then","receivedData","json","results","filteredResults","Object","values","map","comp","residents","splice","length","getPlanets","obj","filters","filterByName","CategoriesFilter","useContext","data-testid","onChange","e","target","type","id","onClick","SearchBar","htmlFor","text","event","Table","filterPlanets","useMemo","lowerCasePlanets","toLowerCase","filter","element","includes","filterByCategory","Number","condition","planet","index","key","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","films","film","numberKey","created","edited","url","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f66b2fce.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst PlanetsContext = createContext();\n\nexport default PlanetsContext;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport PlanetsContext from './PlanetsContext';\n\nfunction Provider({ children }) {\n  const [data, getData] = useState([]);\n  const [onChangeInputs, getOnChangeInputs] = useState(false);\n  const [newData, getNewData] = useState([]);\n  const [name, getName] = useState('');\n  const [button, getButton] = useState(false);\n  // column, comparison, value\n  const [column, getColumn] = useState('');\n  const [comparison, getComparison] = useState('');\n  const [value, getValue] = useState('');\n  const [filterByNumericValues, getFilterByNumericValues] = useState([{\n    column, comparison, value }]);\n\n  useEffect(() => getFilterByNumericValues([{\n    column, comparison, value }]), [column, comparison, value]);\n\n  useEffect(() => {\n    const getPlanets = async () => {\n      const endpoint = 'https://swapi-trybe.herokuapp.com/api/planets/';\n\n      // !requisição API\n      const { results } = await fetch(endpoint)\n        .then((receivedData) => receivedData.json());\n      const filteredResults = Object.values(results);\n\n      filteredResults.map((comp) => {\n        comp.residents.splice(0, comp.residents.length);\n        return comp;\n      });\n\n      getData(filteredResults);\n    };\n\n    getPlanets();\n  }, []);\n\n  const obj = {\n    data,\n    getData,\n    getName,\n    name,\n    filters: {\n      filterByName: {\n        name,\n      },\n      filterByNumericValues,\n    },\n    filterByNumericValues,\n    getColumn,\n    getComparison,\n    getValue,\n    newData,\n    column,\n    comparison,\n    value,\n    getNewData,\n    button,\n    getButton,\n    onChangeInputs,\n    getOnChangeInputs,\n  };\n  return (\n    <PlanetsContext.Provider value={ obj }>\n      {children}\n    </PlanetsContext.Provider>\n  );\n}\n\nexport default Provider;\n\nProvider.propTypes = {\n  children: PropTypes.array,\n}.isRequired;\n","import React, { useContext } from 'react';\nimport PlanetsContext from '../../Context/PlanetsContext';\n\nfunction CategoriesFilter() {\n  const { getColumn, getComparison,\n    getValue, value, getButton, getOnChangeInputs } = useContext(PlanetsContext);\n\n  function handleChangeColumn(event) {\n    getColumn(event.target.value);\n  }\n\n  function handleChangeComparison(event) {\n    getComparison(event.target.value);\n  }\n\n  function handleChangeValue(event) {\n    getValue(event.target.value);\n  }\n\n  return (\n    <div>\n      <select\n        data-testid=\"column-filter\"\n        onChange={ (e) => {\n          handleChangeColumn(e);\n          getOnChangeInputs(false);\n        } }\n      >\n        <option value=\"population\">population</option>\n        <option value=\"orbital_period\">orbital_period</option>\n        <option value=\"diameter\">diameter</option>\n        <option value=\"rotation_period\">rotation_period</option>\n        <option value=\"surface_water\">surface_water</option>\n      </select>\n      <select\n        data-testid=\"comparison-filter\"\n        onChange={ (e) => {\n          handleChangeComparison(e);\n          getOnChangeInputs(false);\n        } }\n      >\n        <option value=\"maior que\">maior que</option>\n        <option value=\"menor que\">menor que</option>\n        <option value=\"igual a\">igual a</option>\n      </select>\n      <input\n        data-testid=\"value-filter\"\n        type=\"number\"\n        value={ value }\n        onChange={ (e) => {\n          handleChangeValue(e);\n          getOnChangeInputs(false);\n        } }\n        id=\"numberInput\"\n      />\n      <button\n        data-testid=\"button-filter\"\n        type=\"button\"\n        onClick={ () => {\n          getButton(true);\n          getOnChangeInputs(true);\n        } }\n        // onMouseUp={ () => getButton(false) }\n      >\n        Enviar\n      </button>\n    </div>\n  );\n}\n\nexport default CategoriesFilter;\n","import React, { useContext } from 'react';\nimport PlanetsContext from '../Context/PlanetsContext';\nimport CategoriesFilter from './subcomponent/CategoriesFilter';\n\nfunction SearchBar() {\n  const { name, getName } = useContext(PlanetsContext);\n\n  const handleKeyWord = (event) => {\n    getName(event.target.value);\n  };\n\n  return (\n    <div>\n      <label htmlFor=\"search\">\n        Filtro:\n        <input\n          text=\"text\"\n          value={ name }\n          onChange={ handleKeyWord }\n          id=\"search\"\n          data-testid=\"name-filter\"\n        />\n      </label>\n      <CategoriesFilter />\n    </div>\n  );\n}\n\nexport default SearchBar;\n","import React, { useContext, useMemo } from 'react';\nimport PlanetsContext from '../Context/PlanetsContext';\nimport SearchBar from './SearchBar';\n\nfunction Table() {\n  const { data, name, column, comparison,\n    value, onChangeInputs } = useContext(PlanetsContext);\n\n  // *Filtra através do nome dos planetas\n  const filterPlanets = useMemo(() => {\n    const lowerCasePlanets = name.toLowerCase();\n    return data.filter((element) => element.name\n      .toLowerCase().includes(lowerCasePlanets));\n  }, [data, name]);\n\n  // *Filtra através da categoria inserida\n  const filterByCategory = useMemo(() => filterPlanets.filter((element) => {\n    let results = null;\n    if (comparison === 'menor que') {\n      results = Number(element[column]) < Number(value);\n    }\n    if (comparison === 'maior que') {\n      results = Number(element[column]) > Number(value);\n    }\n    if (comparison === 'igual a') {\n      results = Number(element[column]) === Number(value);\n    }\n    return results;\n  }), [filterPlanets, column, value, comparison]);\n    // \"200000\"\n    // 6000000\n\n  const condition = onChangeInputs ? filterByCategory : filterPlanets;\n\n  return (\n    <div>\n      <SearchBar />\n      <table id=\"table\">\n        <thead id=\"head\">\n          <tr>\n            <th>name</th>\n            <th>rotation_period</th>\n            <th>orbital_period</th>\n            <th>diameter</th>\n            <th>climate</th>\n            <th>gravity</th>\n            <th>terrain</th>\n            <th>surface_water</th>\n            <th>population</th>\n            <th>films</th>\n            <th>created</th>\n            <th>edited</th>\n            <th>url</th>\n          </tr>\n        </thead>\n        <tbody id=\"body\">\n          {(filterPlanets || filterByCategory) && (\n            condition.map((planet, index) => (\n              <tr key={ index }>\n                <td>{planet.name}</td>\n                <td>{planet.rotation_period}</td>\n                <td>{planet.orbital_period}</td>\n                <td>{planet.diameter}</td>\n                <td>{planet.climate}</td>\n                <td>{planet.gravity}</td>\n                <td>{planet.terrain}</td>\n                <td>{planet.surface_water}</td>\n                <td>{planet.population}</td>\n                <td>\n                  {planet.films\n                    .map((film, numberKey) => <p id=\"aeo\" key={ numberKey }>{film}</p>)}\n                </td>\n                <td>{planet.created}</td>\n                <td>{planet.edited}</td>\n                <td>{planet.url}</td>\n              </tr>\n            )))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default Table;\n","import React from 'react';\nimport './App.css';\nimport Provider from './Context/Provider';\nimport Table from './components/Table';\n\nfunction App() {\n  return (\n    <Provider>\n      <Table />\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}